syntax = "proto3";

package donations;

option java_package = "com.empuje.grpc.donations";
option java_multiple_files = true;

import "google/protobuf/timestamp.proto";

// Refleja la tabla donaciones (soft delete con "eliminado").
message Donation {
  int64 id = 1;
  int64 categoria_id = 2;
  string descripcion = 3; // hasta 100 chars en la BD
  int32 cantidad = 4;     // CHECK >= 0
  bool eliminado = 5;
  google.protobuf.Timestamp fecha_alta = 6;
  int64 usuario_alta = 7; // FK usuarios.id
}

// Crear donaciÃ³n
message CreateDonationRequest {
  int64 categoria_id = 1;
  string descripcion = 2;
  int32 cantidad = 3;
  int64 usuario_alta = 4;
}
message CreateDonationResponse {
  Donation donation = 1;
}

// Obtener por id
message GetDonationRequest { int64 id = 1; }
message GetDonationResponse { Donation donation = 1; }

// Listar con filtros simples
message ListDonationsRequest {
  int64 categoria_id = 1; // 0 = sin filtro
  bool include_deleted = 2; // false por defecto
}
message ListDonationsResponse {
  repeated Donation donations = 1;
}

// Actualizar cantidad (ej. ajustar stock)
message UpdateDonationQtyRequest {
  int64 id = 1;
  int32 cantidad = 2; // nuevo valor (>=0)
}
message UpdateDonationQtyResponse {
  Donation donation = 1;
}

// Soft delete (eliminado = true)
message SoftDeleteDonationRequest { int64 id = 1; }
message SoftDeleteDonationResponse { Donation donation = 1; }

service DonationsService {
  rpc CreateDonation (CreateDonationRequest) returns (CreateDonationResponse);
  rpc GetDonation (GetDonationRequest) returns (GetDonationResponse);
  rpc ListDonations (ListDonationsRequest) returns (ListDonationsResponse);
  rpc UpdateDonationQty (UpdateDonationQtyRequest) returns (UpdateDonationQtyResponse);
  rpc SoftDeleteDonation (SoftDeleteDonationRequest) returns (SoftDeleteDonationResponse);
}
