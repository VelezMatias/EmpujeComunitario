# =============================================================
#   EmpujeComunitario - GraphQL
#   Schema para Informes de Donaciones + Filtros Persistentes
# =============================================================

"""
Grupo agregado del informe de donaciones.
"""
type DonationGroup {
  categoria: String
  eliminado: String
  total: Float
}

"""
Detalle por donación (para la vista detalle del informe).
"""
type DonationDetail {
  descripcion: String
  cantidad: Int
  fecha_alta: String
}

# =============================================================
#   Filtros guardados (Donaciones)
# =============================================================

"""
Filtro guardado por el usuario (persistente).
"""
type DonationSavedFilter {
  id: ID!
  nombre: String!
  categoria: String
  from: String
  to: String
  eliminado: String
}

"""
Input para crear/actualizar un filtro guardado.
"""
input FilterInput {
  nombre: String!
  categoria: String
  from: String
  to: String
  eliminado: String
}

# =============================================================
#   Consultas
# =============================================================

type Query {
  """
  Informe agrupado por categoría/estado (para la tabla principal).
  """
  donationReportGrouped(
    categoria: String
    from: String
    to: String
    eliminado: String
  ): [DonationGroup!]!

  """
  Informe detalle (para tabla detallada/descarga).
  """
  donationDetails(
    categoria: String
    from: String
    to: String
    eliminado: String
  ): [DonationDetail!]! 
  
  # [DonationDetail!]! lista no nula de elementos no nulos.

   # Informe de participación en eventos propios
  eventParticipationReport(
    usuarioId: Int!,
    from: String,
    to: String,
    repartoDonaciones: String # "SI" | "NO" | "AMBOS"
  ): [EventMonthGroup]

  """
  Devuelve los filtros de donaciones guardados por el usuario logueado.
  La UI (donaciones.html) usa esta query para poblar el <select>.
  """
  myFilters: [DonationSavedFilter!]!
}

# =============================================================
#   Eventos
# =============================================================

type EventDonation {
  descripcion: String
  cantidad: Int
}

type EventItem {
  dia: Int
  nombre: String
  descripcion: String
  donaciones: [EventDonation]
}

type EventMonthGroup {
  mes: String
  year: Int
  eventos: [EventItem]
}

# =============================================================
#   Mutations
# =============================================================

type Mutation {
  """
  Crea un filtro de donaciones persistente.
  """
  saveFilter(input: FilterInput!): DonationSavedFilter!

  """
  Actualiza un filtro de donaciones existente (debe ser del usuario actual).
  """
  updateFilter(id: ID!, input: FilterInput!): DonationSavedFilter!

  """
  Elimina un filtro de donaciones (retorna true si se eliminó).
  """
  deleteFilter(id: ID!): Boolean!
}
